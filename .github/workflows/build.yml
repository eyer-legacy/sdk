name: Build
on:
  push:
    branches:
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Set up .NET 6
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
          source-url: https://nuget.pkg.github.com/aimsinnovation/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Set up JRE 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-package: jre
          java-version: '11'
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of SonarCloud analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/sonar/cache
          key: ${{runner.os}}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: ./.sonar/scanner
          key: ${{runner.os}}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
      - name: Restore NuGet packages
        run: dotnet restore SDK.sln
      - name: Init SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
        run: ./.sonar/scanner/dotnet-sonarscanner begin /k:"aimsinnovation_sdk" /o:"aimsinnovation" /d:sonar.login="${{secrets.SONAR_TOKEN}}" /d:sonar.host.url="https://sonarcloud.io"
      - name: Build
        run: dotnet build SDK.sln -c Release
      - name: Run tests
        run: dotnet test SDK.sln -c Release --no-build
      - name: Finish SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
        run: ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{secrets.SONAR_TOKEN}}"
      - name: Publish NuGet packages
        run: |
          dotnet pack SDK.sln -c Release --no-build --output ./output
          dotnet nuget push './output/*.nupkg'
